{"/home/travis/build/npmtest/node-npmtest-hyperspace/test.js":"/* istanbul instrument in package npmtest_hyperspace */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hyperspace/lib.npmtest_hyperspace.js":"/* istanbul instrument in package npmtest_hyperspace */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_hyperspace = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_hyperspace = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-hyperspace/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-hyperspace && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_hyperspace */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_hyperspace\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_hyperspace.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_hyperspace.rollup.js'] =\n            local.assetsDict['/assets.npmtest_hyperspace.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_hyperspace.__dirname + '/lib.npmtest_hyperspace.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-hyperspace/node_modules/hyperspace/index.js":"var hyperstream = require('hyperstream');\nvar through = require('through2');\nvar split = require('split');\nvar splicer = require('stream-splicer');\nvar encode = require('he').encode;\nvar u8 = require('utf8-stream');\nvar combine = require('stream-combiner2');\nvar keyOf = require('./lib/key_of.js');\nvar has = require('has');\n\nmodule.exports = function (html, opts, fn) {\n    if (typeof html !== 'string' && !Buffer.isBuffer(html)) {\n        throw new Error('invalid html, not a string or buffer');\n    }\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    }\n    if (!opts) opts = {};\n    \n    var first = true;\n    var buckets = {}, bkeys = [];\n    var keyName = opts.key === true ? 'key' : opts.key;\n    var kattr = opts.attr || (opts.key && 'key');\n    \n    if (!Array.isArray(keyName)) keyName = [ keyName ];\n    var kof = opts.key === true\n        ? function () { return true }\n        : keyOf(keyName)\n    ;\n    \n    var rower = through.obj(function (row, enc, next) {\n        if (first && (typeof row === 'string' || Buffer.isBuffer(row))) {\n            first = false;\n            var sp = split(function (s) {\n                if (s) return JSON.parse(s);\n            });\n            pipeline.unshift(sp);\n            pipeline.write(row);\n            return next();\n        }\n        first = false;\n        \n        if (kattr) {\n            var k = kof(row);\n            if (k) {\n                if (!has(buckets, k)) bkeys.push(k);\n                buckets[k] = fn(row);\n            }\n            next();\n        }\n        else sendParams(fn(row), null, next)\n    }, rend);\n    var pipeline = splicer.obj([ rower ]);\n    return pipeline;\n    \n    function rend () {\n        if (!opts.key) return rower.push(null);\n        \n        (function next () {\n            if (bkeys.length === 0) return rower.push(null);\n            var k = bkeys.shift();\n            sendParams(buckets[k], k, next);\n        })();\n    }\n    \n    function sendParams (params, key, next) {\n        if (!params || typeof params !== 'object') return next();\n        var fparams = fix(params);\n        if (key && key !== true) {\n            var star = '*:first';\n            if (!fparams[star]) fparams[star] = {};\n            fparams[star][kattr] = key;\n        }\n        \n        var hs = hyperstream(fparams);\n        hs.pipe(through(write, end));\n        hs.end(html);\n        function write (buf, enc, next) { rower.push(buf); next() }\n        function end () { next() }\n    }\n};\n\nfunction fix (params) {\n    var res = {};\n    Object.keys(params).forEach(function (key) {\n        var p = params[key];\n        if (isStream(p)) {\n            res[key] = p.pipe(encoder());\n        }\n        else if (typeof p === 'string') {\n            res[key] = encode(p);\n        }\n        else {\n            res[key] = p;\n        }\n    });\n    return res;\n}\n\nfunction isStream (x) { return x && typeof x.pipe === 'function' }\n\nfunction encoder () {\n    return combine(u8(), through(function (buf, enc, next) {\n        this.push(encode(buf.toString('utf8')));\n        next();\n    }));\n}\n","/home/travis/build/npmtest/node-npmtest-hyperspace/node_modules/hyperspace/lib/key_of.js":"var json = require('jsonify');\nvar isarray = require('isarray');\n\nmodule.exports = function (key) {\n    if (key === true) key = 'key';\n    if (typeof key === 'function') {\n        return function (row) { return key(row) };\n    }\n    return function (row) {\n        if (!isarray(key)) key = [ key ];\n        var x = row && getKey(row, key);\n        if (typeof x === 'string') return x\n        else return json.stringify(x)\n    }\n};\n\nfunction getKey (obj, keys) {\n    for (var i = 0; i < keys.length - 1; i++) {\n        obj = obj[keys[i]];\n        if (!obj) return;\n    }\n    return obj[keys[i]];\n}\n","/home/travis/build/npmtest/node-npmtest-hyperspace/node_modules/hyperspace/browser.js":"var through = require('through2');\nvar hyperglue = require('hyperglue');\nvar domify = require('domify');\nvar keyOf = require('./lib/key_of.js');\nvar json = require('jsonify');\n\nmodule.exports = function (html, opts, cb) {\n    if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (!opts) opts = {};\n    \n    var keyName = opts.key === true ? 'key' : opts.key;\n    var kattr = opts.attr === undefined ? (opts.key && 'key') : opts.attr;\n    var kof = opts.key === true\n        ? function () { return true }\n        : keyOf(keyName)\n    ;\n    var elements = {};\n    \n    var className = classNameOf(html);\n    \n    var tr = through.obj(write, end);\n    function write (line, enc, next) {\n        var row;\n        if (Buffer.isBuffer(line)) {\n            line = line.toString('utf8');\n        }\n        if (typeof line === 'string') {\n            try { row = json.parse(line) }\n            catch (err) { this.emit('error', err) }\n        }\n        else row = line;\n        \n        if (opts.key && row && row.type === 'del') {\n            var k = kof(row);\n            if (k && elements[k]) {\n                this.emit('delete', elements[k]);\n                return next();\n            }\n        }\n        \n        var res = cb.call(this, row);\n        if (!res) return;\n        var keys = objectKeys(res);\n        var streams = [];\n        \n        for (var i = 0; i < keys.length; i++) (function (key) {\n            var x = res[key];\n            if (isStream(x)) {\n                delete res[key];\n                streams.push([ key, x ]);\n            }\n            else if (x && typeof x === 'object' && isStream(x._html)) {\n                var st = x._html;\n                delete x._html;\n                streams.push([ key, st ]);\n            }\n            else if (x && typeof x === 'object' && isStream(x._text)) {\n                var st = x._text;\n                delete x._text;\n                streams.push([ key, st ]);\n            }\n        })(keys[i]);\n        \n        var type, elem;\n        var k = kof && kof(row);\n        \n        if (k && elements[k]) {\n            elem = hyperglue(elements[k], res);\n            type = 'update';\n        }\n        else {\n            elem = hyperglue(html, res);\n            type = 'element';\n        }\n        if (k) elements[k] = elem;\n        if (k && kattr && row[keyName]) {\n            elem.setAttribute(kattr, row[keyName]);\n        }\n        \n        for (var i = 0; i < streams.length; i++) (function (ks) {\n            var key = ks[0], stream = ks[1];\n            tr.emit('stream', stream, elem);\n            var cur = elem.querySelector(key);\n            if (!cur) return;\n            \n            stream.on('element', function (elem) {\n                cur.appendChild(elem);\n                stream.removeListener('data', ondata);\n            });\n            stream.on('data', ondata);\n            function ondata (e) { cur.innerHTML += e }\n        })(streams[i]);\n        \n        this.emit(type, elem);\n        \n        if (opts.key !== true) this.push(elem.outerHTML);\n        next();\n    }\n    \n    function end () {\n        if (opts.key === true) {\n            this.push(elements[true].outerHTML);\n        }\n        this.push(null);\n    }\n    \n    tr.prependTo = function (t) {\n        var target = getTarget(t);\n        \n        tr.on('element', function (elem) {\n            target.insertBefore(elem, target.childNodes[0]);\n        });\n        \n        tr.on('delete', function (elem) {\n            if (hasChild(target, elem)) target.removeChild(elem);\n        });\n        \n        return tr;\n    };\n    \n    tr.appendTo = function (t) {\n        var target = getTarget(t);\n        \n        tr.on('element', function (elem) {\n            target.appendChild(elem);\n        });\n        \n        tr.on('delete', function (elem) {\n            if (hasChild(target, elem)) target.removeChild(elem);\n        });\n        \n        return tr;\n    };\n    \n    tr.sortTo = function (t, cmp) {\n        if (opts.key && cmp === undefined) {\n            cmp = function (a, b) {\n                var ka = a.getAttribute(opts.key);\n                var kb = b.getAttribute(opts.key);\n                return ka < kb ? -1 : 1;\n            };\n        }\n        else if (typeof cmp === 'string') {\n            cmp = (function (str) {\n                var flip = /^~/.test(str);\n                if (flip) str = str.replace(/^~/, '');\n                var n = flip ? 1 : -1;\n                \n                return function (a, b) {\n                    var qa = a.querySelector(str);\n                    var xa = qa && qa.textContent || qa.innerText;\n                    var qb = b.querySelector(str);\n                    var xb = qb && qb.textContent || qb.innerText;\n                    if (isNum(xa) && isNum(xb)) {\n                        return Number(xa) < Number(xb) ? -n : n;\n                    }\n                    else return xa < xb ? -n : n;\n                };\n            })(cmp);\n        }\n        if (typeof cmp !== 'function') {\n            throw new Error('comparison function not provided');\n        }\n        var target = getElem(t);\n        \n        var sorted = [].slice.call(target.getElementsByClassName(className));\n        sorted.sort(cmp);\n        for (var i = 0; i < sorted.length; i++) {\n            if (target.childNodes[i] === sorted[i]) continue;\n            target.removeChild(sorted[i]);\n            target.insertBefore(sorted[i], target.childNodes[i]);\n        }\n        \n        tr.on('element', onupdate);\n        tr.on('update', function (elem) {\n            if (hasChild(target, elem)) {\n                target.removeChild(elem);\n            }\n            onupdate(elem);\n        });\n        tr.on('delete', function (elem) {\n            if (hasChild(target, elem)) target.removeChild(elem);\n        });\n        \n        getTarget(t, target);\n        return tr;\n        \n        function onupdate (elem) {\n            var nodes = target.getElementsByClassName(className);\n            for (var i = 0; i < nodes.length; i++) {\n                if (nodes[i] === elem) continue;\n                var n = cmp(elem, nodes[i]);\n                if (n < 0) {\n                    if (hasChild(target, elem)) {\n                        target.removeChild(elem);\n                    }\n                    target.insertBefore(elem, nodes[i]);\n                    return;\n                }\n            }\n            target.appendChild(elem);\n        }\n    };\n    \n    var emittedElements = false;\n    tr.className = className;\n    return tr;\n    \n    function getTarget (t, target) {\n        if (!target) target = getElem(t);\n        tr.emit('parent', target);\n        if (!className) return target;\n        if (emittedElements) return target;\n        emittedElements = true;\n        var elems = target.querySelectorAll('.' + className);\n        \n        process.nextTick(function(){\n            for (var i = 0; i < elems.length; i++) {\n                var elem = elems[i];\n                var key = opts.key && elem.getAttribute(opts.key);\n                if (key) elements[key] = elem;\n                tr.emit('element', elem);\n            }\n        });\n\n        return target;\n    }\n};\n\nfunction classNameOf (html) {\n    var elems = domify(html);\n    if (elems.length) return elems[0].getAttribute('class');\n}\n\nfunction hasChild (node, child) {\n    var nodes = node.childNodes;\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i] === child) return true;\n    }\n    return false;\n}\n\nfunction getElem (target) {\n    if (typeof target === 'string') {\n        return document.querySelector(target);\n    }\n    return target;\n}\n\nfunction isStream (x) {\n    return x && typeof x.pipe === 'function';\n}\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nfunction isNum (s) {\n    return /^\\s*(\\d*\\.\\d+|\\d+\\.?)(e-?\\d+)?\\s*$/.test(s);\n}\n","/home/travis/build/npmtest/node-npmtest-hyperspace/node_modules/hyperspace/yo/yo.js":"var fs = require('fs');\nvar hyperspace = require('../');\nvar html = fs.readFileSync(__dirname + '/yo.html');\n\nvar hs = hyperspace(html, function (row) {\n    return {\n        '.row': { class: 'whatever' },\n        '.name': row.name,\n        '.bio': row.bio\n    };\n});\nhs.end({ name: 't-rex', bio: 'rawr' });\nhs.pipe(process.stdout);\n"}